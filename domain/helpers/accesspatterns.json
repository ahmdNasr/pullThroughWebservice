[
	{ 
		"name": "register",
		"method": "POST",
		"params": ["email", "password", "firstname", "lastname", "username", "description", "birthdate", "username", "isCompany"],
		"queries": [ 
			{
				"query": "INSERT INTO users_by_email(email, password, firstname, lastname, username) VALUES(?, ?, ?, ?, ?) ",
				"params": ["email", "password", "firstname", "lastname", "username"]
			},
			{
				"query": "INSERT INTO userdetails_by_user(description, birthdate, username, isCompany, firstname, lastname) VALUES(?, ?, ?, ?, ?, ?) ",
				"params": ["description", "birthdate", "username", "isCompany", "firstname", "lastname"]
			},
			{
				"query": "INSERT INTO user_by_username(firstname, lastname, description) VALUES(?, ?, ?) ",
				"params": ["firstname", "lastname", "description"]
			}
		],
		"isBatchPattern": true, 
		"description": "User registration accesspattern."
	},
	{ 
		"name": "login",
		"method": "POST",
		"params": ["email", "password"],
		"queries": ["SELECT user_id, email, firstname, lastname, username FROM users_by_email WHERE email = ? AND password = ?;"],
		"description": "User login with basic authentication"
	},
	{
		"name": "sphereview",
		"method": "GET",
		"params": ["user_id", "event_datetime"],
		"queries": ["SELECT event_id, user_id, event_name, venue, type, event_datetime FROM recommendations_by_user_and_datetime WHERE user_id = ? AND event_datetime > ?;"],
		"authRequired": true,
		"description": "The recommendations for a specific user, identified by user_id."
	},
	{
		"name": "profile",
		"method": "GET",
		"params": ["user_id"],
		"queries": ["SELECT description, birthdate, username, isCompany, firstname, lastname FROM userdetails_by_user WHERE user_id = ?;"],
		"authRequired": true,
		"description": "Profile of the Users, needs Authentication"
	},
	{
		"name": "privateEvents",
		"method": "GET",
		"params": ["user_id", "event_datetime"],
		"queries": ["SELECT event_id, is_creator, event_datetime FROM visible_events_by_user WHERE user_id = ? and event_datetime >= ?;"],
		"authRequired": true,
		"description": "Private event per user beginning at a specific timestamp."
	},
	{
		"name": "eventDetails",
		"method": "GET",
		"params": ["event_id"],
		"queries": ["SELECT type, description, datetime, tags, prerequisites, firstname, lastname, email, username, user_id, venue, name FROM eventdetails_by_event_id WHERE event_id = ?;"],
		"authRequired": true,
		"description": "Details of one specific Event."
	},
	{
		"name": "timeline",
		"method": "GET",
		"params": ["user_id", "event_datetime"],
		"queries": ["SELECT event_name, event_id FROM timeline_by_user_and_datetime WHERE user_id = ? AND event_datetime >= ?;"],
		"authRequired": true,
		"description": "Timeline of a logged in User, the timeline displays already visited events."
	},
	{
		"name": "notifications",
		"method": "GET",
		"params": ["recipient_id", "timestamp"],
		"queries": ["SELECT notification_type, content, event_name, venue, event_description, notification_id, event_id, sender_id FROM notifications_by_recipient WHERE recipient_id = ? AND timestamp >= ?;"],
		"authRequired": true,
		"description": "Notifications for a specific user starting at a specific timestamp."
	},
	{
		"name": "advancedSphereSearch",
		"method": "GET",
		"params": ["type", "tags", "event_datetime"],
		"queries": ["SELECT event_id, event_name, venue, title_picture, event_datetime FROM event_by_tags_and_type_and_datetime WHERE type = ? AND tags CONTAINS ? AND event_datetime > ?;"],
		"authRequired": true,
		"description": "Searching for EventSpheres by type, tags and from a specific datetime."
	},
	{
		"name": "primitiveUserSearch",
		"method": "GET",
		"params": ["username"],
		"queries": ["SELECT firstname, lastname, description, profile_picture FROM user_by_username WHERE username = ?;"],
		"authRequired": true,
		"description": "Searching for users by their username."
	}
]